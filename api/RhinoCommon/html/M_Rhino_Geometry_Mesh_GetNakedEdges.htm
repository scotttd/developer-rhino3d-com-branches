<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Mesh.GetNakedEdges Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GetNakedEdges method" /><meta name="System.Keywords" content="Mesh.GetNakedEdges method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Mesh.GetNakedEdges" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Mesh.GetNakedEdges" /><meta name="Description" content="Returns all edges of a mesh that are considered &quot;naked&quot; in the sense that the edge only has one face." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_Mesh_GetNakedEdges" /><meta name="guid" content="M_Rhino_Geometry_Mesh_GetNakedEdges" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Rhino_Geometry_Mesh.htm" title="Mesh Class" tocid="T_Rhino_Geometry_Mesh">Mesh Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Rhino_Geometry_Mesh.htm" title="Mesh Methods" tocid="Methods_T_Rhino_Geometry_Mesh">Mesh Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_Append.htm" title="Append Method " tocid="M_Rhino_Geometry_Mesh_Append">Append Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_ClearTextureData.htm" title="ClearTextureData Method " tocid="M_Rhino_Geometry_Mesh_ClearTextureData">ClearTextureData Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_ClosestMeshPoint.htm" title="ClosestMeshPoint Method " tocid="M_Rhino_Geometry_Mesh_ClosestMeshPoint">ClosestMeshPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_ClosestPoint.htm" title="ClosestPoint Method " tocid="Overload_Rhino_Geometry_Mesh_ClosestPoint">ClosestPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CollapseFacesByArea.htm" title="CollapseFacesByArea Method " tocid="M_Rhino_Geometry_Mesh_CollapseFacesByArea">CollapseFacesByArea Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CollapseFacesByByAspectRatio.htm" title="CollapseFacesByByAspectRatio Method " tocid="M_Rhino_Geometry_Mesh_CollapseFacesByByAspectRatio">CollapseFacesByByAspectRatio Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CollapseFacesByEdgeLength.htm" title="CollapseFacesByEdgeLength Method " tocid="M_Rhino_Geometry_Mesh_CollapseFacesByEdgeLength">CollapseFacesByEdgeLength Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_ColorAt.htm" title="ColorAt Method " tocid="Overload_Rhino_Geometry_Mesh_ColorAt">ColorAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_Compact.htm" title="Compact Method " tocid="M_Rhino_Geometry_Mesh_Compact">Compact Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CopyFrom.htm" title="CopyFrom Method " tocid="M_Rhino_Geometry_Mesh_CopyFrom">CopyFrom Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateBooleanDifference.htm" title="CreateBooleanDifference Method " tocid="M_Rhino_Geometry_Mesh_CreateBooleanDifference">CreateBooleanDifference Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateBooleanIntersection.htm" title="CreateBooleanIntersection Method " tocid="M_Rhino_Geometry_Mesh_CreateBooleanIntersection">CreateBooleanIntersection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateBooleanSplit.htm" title="CreateBooleanSplit Method " tocid="M_Rhino_Geometry_Mesh_CreateBooleanSplit">CreateBooleanSplit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateBooleanUnion.htm" title="CreateBooleanUnion Method " tocid="M_Rhino_Geometry_Mesh_CreateBooleanUnion">CreateBooleanUnion Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_CreateContourCurves.htm" title="CreateContourCurves Method " tocid="Overload_Rhino_Geometry_Mesh_CreateContourCurves">CreateContourCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_CreateFromBox.htm" title="CreateFromBox Method " tocid="Overload_Rhino_Geometry_Mesh_CreateFromBox">CreateFromBox Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_CreateFromBrep.htm" title="CreateFromBrep Method " tocid="Overload_Rhino_Geometry_Mesh_CreateFromBrep">CreateFromBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateFromClosedPolyline.htm" title="CreateFromClosedPolyline Method " tocid="M_Rhino_Geometry_Mesh_CreateFromClosedPolyline">CreateFromClosedPolyline Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateFromCone.htm" title="CreateFromCone Method " tocid="M_Rhino_Geometry_Mesh_CreateFromCone">CreateFromCone Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateFromCylinder.htm" title="CreateFromCylinder Method " tocid="M_Rhino_Geometry_Mesh_CreateFromCylinder">CreateFromCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateFromPlanarBoundary.htm" title="CreateFromPlanarBoundary Method " tocid="M_Rhino_Geometry_Mesh_CreateFromPlanarBoundary">CreateFromPlanarBoundary Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateFromPlane.htm" title="CreateFromPlane Method " tocid="M_Rhino_Geometry_Mesh_CreateFromPlane">CreateFromPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreateFromSphere.htm" title="CreateFromSphere Method " tocid="M_Rhino_Geometry_Mesh_CreateFromSphere">CreateFromSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_CreatePartitions.htm" title="CreatePartitions Method " tocid="M_Rhino_Geometry_Mesh_CreatePartitions">CreatePartitions Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_Duplicate.htm" title="Duplicate Method " tocid="M_Rhino_Geometry_Mesh_Duplicate">Duplicate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_DuplicateMesh.htm" title="DuplicateMesh Method " tocid="M_Rhino_Geometry_Mesh_DuplicateMesh">DuplicateMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_EvaluateMeshGeometry.htm" title="EvaluateMeshGeometry Method " tocid="M_Rhino_Geometry_Mesh_EvaluateMeshGeometry">EvaluateMeshGeometry Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_ExplodeAtUnweldedEdges.htm" title="ExplodeAtUnweldedEdges Method " tocid="M_Rhino_Geometry_Mesh_ExplodeAtUnweldedEdges">ExplodeAtUnweldedEdges Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_Flip.htm" title="Flip Method " tocid="M_Rhino_Geometry_Mesh_Flip">Flip Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_GetCachedTextureCoordinates.htm" title="GetCachedTextureCoordinates Method " tocid="M_Rhino_Geometry_Mesh_GetCachedTextureCoordinates">GetCachedTextureCoordinates Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_GetNakedEdgePointStatus.htm" title="GetNakedEdgePointStatus Method " tocid="M_Rhino_Geometry_Mesh_GetNakedEdgePointStatus">GetNakedEdgePointStatus Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_GetNakedEdges.htm" title="GetNakedEdges Method " tocid="M_Rhino_Geometry_Mesh_GetNakedEdges">GetNakedEdges Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_GetOutlines.htm" title="GetOutlines Method " tocid="Overload_Rhino_Geometry_Mesh_GetOutlines">GetOutlines Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_GetPartition.htm" title="GetPartition Method " tocid="M_Rhino_Geometry_Mesh_GetPartition">GetPartition Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_IsManifold.htm" title="IsManifold Method " tocid="M_Rhino_Geometry_Mesh_IsManifold">IsManifold Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_IsPointInside.htm" title="IsPointInside Method " tocid="M_Rhino_Geometry_Mesh_IsPointInside">IsPointInside Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_NormalAt.htm" title="NormalAt Method " tocid="Overload_Rhino_Geometry_Mesh_NormalAt">NormalAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_Offset.htm" title="Offset Method " tocid="Overload_Rhino_Geometry_Mesh_Offset">Offset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_OnSwitchToNonConst.htm" title="OnSwitchToNonConst Method " tocid="M_Rhino_Geometry_Mesh_OnSwitchToNonConst">OnSwitchToNonConst Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_PointAt.htm" title="PointAt Method " tocid="Overload_Rhino_Geometry_Mesh_PointAt">PointAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_PullPointsToMesh.htm" title="PullPointsToMesh Method " tocid="M_Rhino_Geometry_Mesh_PullPointsToMesh">PullPointsToMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_Reduce.htm" title="Reduce Method " tocid="M_Rhino_Geometry_Mesh_Reduce">Reduce Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_SetCachedTextureCoordinates.htm" title="SetCachedTextureCoordinates Method " tocid="M_Rhino_Geometry_Mesh_SetCachedTextureCoordinates">SetCachedTextureCoordinates Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_SolidOrientation.htm" title="SolidOrientation Method " tocid="M_Rhino_Geometry_Mesh_SolidOrientation">SolidOrientation Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Mesh_Split.htm" title="Split Method " tocid="Overload_Rhino_Geometry_Mesh_Split">Split Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_SplitDisjointPieces.htm" title="SplitDisjointPieces Method " tocid="M_Rhino_Geometry_Mesh_SplitDisjointPieces">SplitDisjointPieces Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_UnifyNormals.htm" title="UnifyNormals Method " tocid="M_Rhino_Geometry_Mesh_UnifyNormals">UnifyNormals Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_Unweld.htm" title="Unweld Method " tocid="M_Rhino_Geometry_Mesh_Unweld">Unweld Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Mesh_Weld.htm" title="Weld Method " tocid="M_Rhino_Geometry_Mesh_Weld">Weld Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">Mesh<span id="LST80EAC789_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST80EAC789_0?cpp=::|nu=.");</script>GetNakedEdges Method </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            Returns all edges of a mesh that are considered "naked" in the
            sense that the edge only has one face.
            </div><p> </p><strong>Namespace:</strong> <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Polyline</span>[] <span class="identifier">GetNakedEdges</span>()</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetNakedEdges</span> <span class="keyword">As</span> <span class="identifier">Polyline</span>()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Return Value</h4>Type: <span id="LST80EAC789_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST80EAC789_1?cpp=array&lt;");</script><a href="T_Rhino_Geometry_Polyline.htm">Polyline</a><span id="LST80EAC789_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST80EAC789_2?cpp=&gt;|vb=()|nu=[]");</script><br />An array of polylines, or null on error.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;
<span class="highlight-keyword">using</span> Rhino.DocObjects;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DupMeshBoundaryCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csDupMeshBoundary"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-keyword">var</span> gm = <span class="highlight-keyword">new</span> GetObject();
      gm.SetCommandPrompt(<span class="highlight-literal">"Select open mesh"</span>);
      gm.GeometryFilter = ObjectType.Mesh;
      gm.GeometryAttributeFilter = GeometryAttributeFilter.OpenMesh;
      gm.Get();
      <span class="highlight-keyword">if</span> (gm.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gm.CommandResult();
      <span class="highlight-keyword">var</span> mesh = gm.Object(<span class="highlight-number">0</span>).Mesh();
      <span class="highlight-keyword">if</span> (mesh == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">var</span> polylines = mesh.GetNakedEdges();
      <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> polyline <span class="highlight-keyword">in</span> polylines)
      {
        doc.Objects.AddPolyline(polyline);
      }

      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> Rhino.DocObjects

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> DupMeshBoundaryCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbDupMeshBoundary"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> gm = <span class="highlight-keyword">New</span> GetObject()
      gm.SetCommandPrompt(<span class="highlight-literal">"Select open mesh"</span>)
      gm.GeometryFilter = ObjectType.Mesh
      gm.GeometryAttributeFilter = GeometryAttributeFilter.OpenMesh
      gm.[<span class="highlight-keyword">Get</span>]()
      <span class="highlight-keyword">If</span> gm.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gm.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> mesh = gm.[<span class="highlight-keyword">Object</span>](<span class="highlight-number">0</span>).Mesh()
      <span class="highlight-keyword">If</span> mesh <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> polylines = mesh.GetNakedEdges()
      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> polyline <span class="highlight-keyword">As</span> Polyline <span class="highlight-keyword">In</span> polylines
        doc.Objects.AddPolyline(polyline)
      <span class="highlight-keyword">Next</span>

      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input.Custom <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.DocObjects <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> RunCommand():
  gm = GetObject()
  gm.SetCommandPrompt(<span class="highlight-literal">"Select open mesh"</span>)
  gm.GeometryFilter = ObjectType.Mesh
  gm.GeometryAttributeFilter = GeometryAttributeFilter.OpenMesh
  gm.Get()
  <span class="highlight-keyword">if</span> gm.CommandResult() != Result.Success:
    <span class="highlight-keyword">return</span> gm.CommandResult()
  mesh = gm.Object(<span class="highlight-number">0</span>).Mesh()
  <span class="highlight-keyword">if</span> mesh == None:
    <span class="highlight-keyword">return</span> Result.Failure

  polylines = mesh.GetNakedEdges()
  <span class="highlight-keyword">for</span> polyline <span class="highlight-keyword">in</span> polylines:
    doc.Objects.AddPolyline(polyline)
  doc.Views.Redraw()
  <span class="highlight-keyword">return</span> Result.Success

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
    RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Mesh.htm">Mesh Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>