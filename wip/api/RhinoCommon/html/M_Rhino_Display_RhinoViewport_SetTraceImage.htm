<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>RhinoViewport.SetTraceImage Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="SetTraceImage method" /><meta name="System.Keywords" content="RhinoViewport.SetTraceImage method" /><meta name="Microsoft.Help.F1" content="Rhino.Display.RhinoViewport.SetTraceImage" /><meta name="Microsoft.Help.Id" content="M:Rhino.Display.RhinoViewport.SetTraceImage(System.String,Rhino.Geometry.Plane,System.Double,System.Double,System.Boolean,System.Boolean)" /><meta name="Description" content="Set trace image (background bitmap) for this viewport." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Display" /><meta name="file" content="M_Rhino_Display_RhinoViewport_SetTraceImage" /><meta name="guid" content="M_Rhino_Display_RhinoViewport_SetTraceImage" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino_Display.htm" title="Rhino.Display" tocid="N_Rhino_Display">Rhino.Display</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Rhino_Display_RhinoViewport.htm" title="RhinoViewport Class" tocid="T_Rhino_Display_RhinoViewport">RhinoViewport Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Rhino_Display_RhinoViewport.htm" title="RhinoViewport Methods" tocid="Methods_T_Rhino_Display_RhinoViewport">RhinoViewport Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_ChangeToParallelProjection.htm" title="ChangeToParallelProjection Method " tocid="M_Rhino_Display_RhinoViewport_ChangeToParallelProjection">ChangeToParallelProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_ChangeToPerspectiveProjection.htm" title="ChangeToPerspectiveProjection Method " tocid="Overload_Rhino_Display_RhinoViewport_ChangeToPerspectiveProjection">ChangeToPerspectiveProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_ClearTraceImage.htm" title="ClearTraceImage Method " tocid="M_Rhino_Display_RhinoViewport_ClearTraceImage">ClearTraceImage Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_ClientToScreen.htm" title="ClientToScreen Method " tocid="Overload_Rhino_Display_RhinoViewport_ClientToScreen">ClientToScreen Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_ClientToWorld.htm" title="ClientToWorld Method " tocid="Overload_Rhino_Display_RhinoViewport_ClientToWorld">ClientToWorld Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_ConstructionPlane.htm" title="ConstructionPlane Method " tocid="M_Rhino_Display_RhinoViewport_ConstructionPlane">ConstructionPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_Dispose.htm" title="Dispose Method " tocid="Overload_Rhino_Display_RhinoViewport_Dispose">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_Finalize.htm" title="Finalize Method " tocid="M_Rhino_Display_RhinoViewport_Finalize">Finalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetCameraAngle.htm" title="GetCameraAngle Method " tocid="M_Rhino_Display_RhinoViewport_GetCameraAngle">GetCameraAngle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetCameraExtents.htm" title="GetCameraExtents Method " tocid="M_Rhino_Display_RhinoViewport_GetCameraExtents">GetCameraExtents Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetCameraFrame.htm" title="GetCameraFrame Method " tocid="M_Rhino_Display_RhinoViewport_GetCameraFrame">GetCameraFrame Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetConstructionPlane.htm" title="GetConstructionPlane Method " tocid="M_Rhino_Display_RhinoViewport_GetConstructionPlane">GetConstructionPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_GetDepth.htm" title="GetDepth Method " tocid="Overload_Rhino_Display_RhinoViewport_GetDepth">GetDepth Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFarRect.htm" title="GetFarRect Method " tocid="M_Rhino_Display_RhinoViewport_GetFarRect">GetFarRect Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustum.htm" title="GetFrustum Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustum">GetFrustum Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumBottomPlane.htm" title="GetFrustumBottomPlane Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumBottomPlane">GetFrustumBottomPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumBoundingBox.htm" title="GetFrustumBoundingBox Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumBoundingBox">GetFrustumBoundingBox Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumCenter.htm" title="GetFrustumCenter Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumCenter">GetFrustumCenter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumFarPlane.htm" title="GetFrustumFarPlane Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumFarPlane">GetFrustumFarPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumLeftPlane.htm" title="GetFrustumLeftPlane Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumLeftPlane">GetFrustumLeftPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumLine.htm" title="GetFrustumLine Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumLine">GetFrustumLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumNearPlane.htm" title="GetFrustumNearPlane Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumNearPlane">GetFrustumNearPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumRightPlane.htm" title="GetFrustumRightPlane Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumRightPlane">GetFrustumRightPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetFrustumTopPlane.htm" title="GetFrustumTopPlane Method " tocid="M_Rhino_Display_RhinoViewport_GetFrustumTopPlane">GetFrustumTopPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetNearRect.htm" title="GetNearRect Method " tocid="M_Rhino_Display_RhinoViewport_GetNearRect">GetNearRect Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_GetPickTransform.htm" title="GetPickTransform Method " tocid="Overload_Rhino_Display_RhinoViewport_GetPickTransform">GetPickTransform Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetScreenPort.htm" title="GetScreenPort Method " tocid="M_Rhino_Display_RhinoViewport_GetScreenPort">GetScreenPort Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetTransform.htm" title="GetTransform Method " tocid="M_Rhino_Display_RhinoViewport_GetTransform">GetTransform Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_GetWorldToScreenScale.htm" title="GetWorldToScreenScale Method " tocid="M_Rhino_Display_RhinoViewport_GetWorldToScreenScale">GetWorldToScreenScale Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_IsVisible.htm" title="IsVisible Method " tocid="Overload_Rhino_Display_RhinoViewport_IsVisible">IsVisible Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_KeyboardDolly.htm" title="KeyboardDolly Method " tocid="M_Rhino_Display_RhinoViewport_KeyboardDolly">KeyboardDolly Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_KeyboardDollyInOut.htm" title="KeyboardDollyInOut Method " tocid="M_Rhino_Display_RhinoViewport_KeyboardDollyInOut">KeyboardDollyInOut Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_KeyboardRotate.htm" title="KeyboardRotate Method " tocid="M_Rhino_Display_RhinoViewport_KeyboardRotate">KeyboardRotate Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_Magnify.htm" title="Magnify Method " tocid="Overload_Rhino_Display_RhinoViewport_Magnify">Magnify Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_MouseDollyZoom.htm" title="MouseDollyZoom Method " tocid="M_Rhino_Display_RhinoViewport_MouseDollyZoom">MouseDollyZoom Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_MouseInOutDolly.htm" title="MouseInOutDolly Method " tocid="M_Rhino_Display_RhinoViewport_MouseInOutDolly">MouseInOutDolly Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_MouseMagnify.htm" title="MouseMagnify Method " tocid="M_Rhino_Display_RhinoViewport_MouseMagnify">MouseMagnify Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_MouseRotateAroundTarget.htm" title="MouseRotateAroundTarget Method " tocid="M_Rhino_Display_RhinoViewport_MouseRotateAroundTarget">MouseRotateAroundTarget Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_MouseRotateCamera.htm" title="MouseRotateCamera Method " tocid="M_Rhino_Display_RhinoViewport_MouseRotateCamera">MouseRotateCamera Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_MouseTilt.htm" title="MouseTilt Method " tocid="M_Rhino_Display_RhinoViewport_MouseTilt">MouseTilt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_NextConstructionPlane.htm" title="NextConstructionPlane Method " tocid="M_Rhino_Display_RhinoViewport_NextConstructionPlane">NextConstructionPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_NextViewProjection.htm" title="NextViewProjection Method " tocid="M_Rhino_Display_RhinoViewport_NextViewProjection">NextViewProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_PopConstructionPlane.htm" title="PopConstructionPlane Method " tocid="M_Rhino_Display_RhinoViewport_PopConstructionPlane">PopConstructionPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_PopViewProjection.htm" title="PopViewProjection Method " tocid="M_Rhino_Display_RhinoViewport_PopViewProjection">PopViewProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_PreviousConstructionPlane.htm" title="PreviousConstructionPlane Method " tocid="M_Rhino_Display_RhinoViewport_PreviousConstructionPlane">PreviousConstructionPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_PreviousViewProjection.htm" title="PreviousViewProjection Method " tocid="M_Rhino_Display_RhinoViewport_PreviousViewProjection">PreviousViewProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_PushConstructionPlane.htm" title="PushConstructionPlane Method " tocid="M_Rhino_Display_RhinoViewport_PushConstructionPlane">PushConstructionPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_PushViewInfo.htm" title="PushViewInfo Method " tocid="M_Rhino_Display_RhinoViewport_PushViewInfo">PushViewInfo Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_PushViewProjection.htm" title="PushViewProjection Method " tocid="M_Rhino_Display_RhinoViewport_PushViewProjection">PushViewProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_Rotate.htm" title="Rotate Method " tocid="M_Rhino_Display_RhinoViewport_Rotate">Rotate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_ScreenToClient.htm" title="ScreenToClient Method " tocid="M_Rhino_Display_RhinoViewport_ScreenToClient">ScreenToClient Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetCameraDirection.htm" title="SetCameraDirection Method " tocid="M_Rhino_Display_RhinoViewport_SetCameraDirection">SetCameraDirection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetCameraLocation.htm" title="SetCameraLocation Method " tocid="M_Rhino_Display_RhinoViewport_SetCameraLocation">SetCameraLocation Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetCameraLocations.htm" title="SetCameraLocations Method " tocid="M_Rhino_Display_RhinoViewport_SetCameraLocations">SetCameraLocations Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetCameraTarget.htm" title="SetCameraTarget Method " tocid="M_Rhino_Display_RhinoViewport_SetCameraTarget">SetCameraTarget Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetClippingPlanes.htm" title="SetClippingPlanes Method " tocid="M_Rhino_Display_RhinoViewport_SetClippingPlanes">SetClippingPlanes Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_SetConstructionPlane.htm" title="SetConstructionPlane Method " tocid="Overload_Rhino_Display_RhinoViewport_SetConstructionPlane">SetConstructionPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetProjection.htm" title="SetProjection Method " tocid="M_Rhino_Display_RhinoViewport_SetProjection">SetProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetToPlanView.htm" title="SetToPlanView Method " tocid="M_Rhino_Display_RhinoViewport_SetToPlanView">SetToPlanView Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetTraceImage.htm" title="SetTraceImage Method " tocid="M_Rhino_Display_RhinoViewport_SetTraceImage">SetTraceImage Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_SetViewProjection.htm" title="SetViewProjection Method " tocid="M_Rhino_Display_RhinoViewport_SetViewProjection">SetViewProjection Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Display_RhinoViewport_SetWallpaper.htm" title="SetWallpaper Method " tocid="Overload_Rhino_Display_RhinoViewport_SetWallpaper">SetWallpaper Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_WorldToClient.htm" title="WorldToClient Method " tocid="M_Rhino_Display_RhinoViewport_WorldToClient">WorldToClient Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_ZoomBoundingBox.htm" title="ZoomBoundingBox Method " tocid="M_Rhino_Display_RhinoViewport_ZoomBoundingBox">ZoomBoundingBox Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_ZoomExtents.htm" title="ZoomExtents Method " tocid="M_Rhino_Display_RhinoViewport_ZoomExtents">ZoomExtents Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Display_RhinoViewport_ZoomExtentsSelected.htm" title="ZoomExtentsSelected Method " tocid="M_Rhino_Display_RhinoViewport_ZoomExtentsSelected">ZoomExtentsSelected Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">RhinoViewport<span id="LST7F869096_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F869096_0?cpp=::|nu=.");</script>SetTraceImage Method </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            Set trace image (background bitmap) for this viewport.
            </div><p> </p><strong>Namespace:</strong> <a href="N_Rhino_Display.htm">Rhino.Display</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">SetTraceImage</span>(
	<span class="identifier">string</span> <span class="parameter">bitmapFileName</span>,
	<span class="identifier">Plane</span> <span class="parameter">plane</span>,
	<span class="identifier">double</span> <span class="parameter">width</span>,
	<span class="identifier">double</span> <span class="parameter">height</span>,
	<span class="identifier">bool</span> <span class="parameter">grayscale</span>,
	<span class="identifier">bool</span> <span class="parameter">filtered</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">SetTraceImage</span> ( 
	<span class="parameter">bitmapFileName</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">plane</span> <span class="keyword">As</span> <span class="identifier">Plane</span>,
	<span class="parameter">width</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">height</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">grayscale</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">filtered</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">bitmapFileName</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">System<span id="LST7F869096_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F869096_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />The bitmap file name.</dd><dt><span class="parameter">plane</span></dt><dd>Type: <a href="T_Rhino_Geometry_Plane.htm">Rhino.Geometry<span id="LST7F869096_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F869096_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Plane</a><br />A picture plane.</dd><dt><span class="parameter">width</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7F869096_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F869096_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />The picture width.</dd><dt><span class="parameter">height</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LST7F869096_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F869096_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />The picture height.</dd><dt><span class="parameter">grayscale</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">System<span id="LST7F869096_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F869096_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />true if the picture should be in grayscale.</dd><dt><span class="parameter">filtered</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">System<span id="LST7F869096_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F869096_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />true if image should be filtered (bilinear) before displayed.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a><br />true if successful.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddBackgroundBitmap(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Allow the user to select a bitmap file</span>
    <span class="highlight-keyword">var</span> fd = <span class="highlight-keyword">new</span> Rhino.UI.OpenFileDialog { Filter = <span class="highlight-literal">"Image Files (*.bmp;*.png;*.jpg)|*.bmp;*.png;*.jpg"</span> };
      <span class="highlight-keyword">if</span> (!fd.ShowDialog())
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;

    <span class="highlight-comment">// Verify the file that was selected</span>
    System.Drawing.Image image;
    <span class="highlight-keyword">try</span>
    {
      image = System.Drawing.Image.FromFile(fd.FileName);
    }
    <span class="highlight-keyword">catch</span> (Exception)
    {
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    }

    <span class="highlight-comment">// Allow the user to pick the bitmap origin</span>
    <span class="highlight-keyword">var</span> gp = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetPoint();
    gp.SetCommandPrompt(<span class="highlight-literal">"Bitmap Origin"</span>);
    gp.ConstrainToConstructionPlane(<span class="highlight-keyword">true</span>);
    gp.Get();
    <span class="highlight-keyword">if</span> (gp.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> gp.CommandResult();

    <span class="highlight-comment">// Get the view that the point was picked in.</span>
    <span class="highlight-comment">// This will be the view that the bitmap appears in.</span>
    <span class="highlight-keyword">var</span> view = gp.View();
    <span class="highlight-keyword">if</span> (view == <span class="highlight-keyword">null</span>)
    {
      view = doc.Views.ActiveView;
      <span class="highlight-keyword">if</span> (view == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    }

    <span class="highlight-comment">// Allow the user to specify the bitmap width in model units</span>
    <span class="highlight-keyword">var</span> gn = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetNumber();
    gn.SetCommandPrompt(<span class="highlight-literal">"Bitmap width"</span>);
    gn.SetLowerLimit(<span class="highlight-number">1.0</span>, <span class="highlight-keyword">false</span>);
    gn.Get();
    <span class="highlight-keyword">if</span> (gn.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> gn.CommandResult();

    <span class="highlight-comment">// Cook up some scale factors</span>
    <span class="highlight-keyword">var</span> w = gn.Number();
    <span class="highlight-keyword">var</span> image_width = image.Width;
    <span class="highlight-keyword">var</span> image_height = image.Height;
    <span class="highlight-keyword">var</span> h = w * (image_height / image_width);

    <span class="highlight-keyword">var</span> plane = view.ActiveViewport.ConstructionPlane();
    plane.Origin = gp.Point();
    view.ActiveViewport.SetTraceImage(fd.FileName, plane, w, h, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">false</span>);
    view.Redraw();
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddBackgroundBitmap(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Allow the user to select a bitmap file</span>
    <span class="highlight-keyword">Dim</span> fd <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.UI.OpenFileDialog()
    fd.Filter = <span class="highlight-literal">"Image Files (*.bmp;*.png;*.jpg)|*.bmp;*.png;*.jpg"</span>
    <span class="highlight-keyword">If</span> fd.ShowDialog() &lt;&gt; System.Windows.Forms.DialogResult.OK <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Verify the file that was selected</span>
    <span class="highlight-keyword">Dim</span> image <span class="highlight-keyword">As</span> System.Drawing.Image
    <span class="highlight-keyword">Try</span>
      image = System.Drawing.Image.FromFile(fd.FileName)
    <span class="highlight-keyword">Catch</span> generatedExceptionName <span class="highlight-keyword">As</span> Exception
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>

    <span class="highlight-comment">' Allow the user to pick the bitmap origin</span>
    <span class="highlight-keyword">Dim</span> gp <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Bitmap Origin"</span>)
    gp.ConstrainToConstructionPlane(<span class="highlight-keyword">True</span>)
    gp.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> gp.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gp.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Get the view that the point was picked in.</span>
    <span class="highlight-comment">' This will be the view that the bitmap appears in.</span>
    <span class="highlight-keyword">Dim</span> view <span class="highlight-keyword">As</span> Rhino.Display.RhinoView = gp.View()
    <span class="highlight-keyword">If</span> view <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      view = doc.Views.ActiveView
      <span class="highlight-keyword">If</span> view <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Allow the user to specify the bitmap with in model units</span>
    <span class="highlight-keyword">Dim</span> gn <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetNumber()
    gn.SetCommandPrompt(<span class="highlight-literal">"Bitmap width"</span>)
    gn.SetLowerLimit(<span class="highlight-number">1.0</span>, <span class="highlight-keyword">False</span>)
    gn.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> gn.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gn.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Cook up some scale factors</span>
    <span class="highlight-keyword">Dim</span> w <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = gn.Number()
    <span class="highlight-keyword">Dim</span> image_width <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-keyword">CDbl</span>(image.Width)
    <span class="highlight-keyword">Dim</span> image_height <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-keyword">CDbl</span>(image.Height)
    <span class="highlight-keyword">Dim</span> h <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = w * (image_height / image_width)

    <span class="highlight-keyword">Dim</span> plane <span class="highlight-keyword">As</span> Rhino.Geometry.Plane = view.ActiveViewport.ConstructionPlane()
    plane.Origin = gp.Point()
    view.ActiveViewport.SetTraceImage(fd.FileName, plane, w, h, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">False</span>)
    view.Redraw()
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> System.Windows.Forms.DialogResult
<span class="highlight-keyword">import</span> System.Drawing.Image

<span class="highlight-keyword">def</span> AddBackgroundBitmap():
    <span class="highlight-comment"># Allow the user to select a bitmap file</span>
    fd = Rhino.UI.OpenFileDialog()
    fd.Filter = <span class="highlight-literal">"Image Files (*.bmp;*.png;*.jpg)|*.bmp;*.png;*.jpg"</span>
    <span class="highlight-keyword">if</span> fd.ShowDialog()!=System.Windows.Forms.DialogResult.OK:
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Verify the file that was selected</span>
    image = None
    <span class="highlight-keyword">try</span>:
        image = System.Drawing.Image.FromFile(fd.FileName)
    <span class="highlight-keyword">except</span>:
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    <span class="highlight-comment"># Allow the user to pick the bitmap origin</span>
    gp = Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Bitmap Origin"</span>)
    gp.ConstrainToConstructionPlane(True)
    gp.Get()
    <span class="highlight-keyword">if</span> gp.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> gp.CommandResult()

    <span class="highlight-comment"># Get the view that the point was picked in.</span>
    <span class="highlight-comment"># This will be the view that the bitmap appears in.</span>
    view = gp.View()
    <span class="highlight-keyword">if</span> view <span class="highlight-keyword">is</span> None:
        view = scriptcontext.doc.Views.ActiveView
        <span class="highlight-keyword">if</span> view <span class="highlight-keyword">is</span> None: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    <span class="highlight-comment"># Allow the user to specify the bitmap with in model units</span>
    gn = Rhino.Input.Custom.GetNumber()
    gn.SetCommandPrompt(<span class="highlight-literal">"Bitmap width"</span>)
    gn.SetLowerLimit(<span class="highlight-number">1.0</span>, False)
    gn.Get()
    <span class="highlight-keyword">if</span> gn.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> gn.CommandResult()

    <span class="highlight-comment"># Cook up some scale factors</span>
    w = gn.Number()
    h = w * (image.Width / image.Height)

    plane = view.ActiveViewport.ConstructionPlane()
    plane.Origin = gp.Point()
    view.ActiveViewport.SetTraceImage(fd.FileName, plane, w, h, False, False)
    view.Redraw()
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    AddBackgroundBitmap()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Display_RhinoViewport.htm">RhinoViewport Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Display.htm">Rhino.Display Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>