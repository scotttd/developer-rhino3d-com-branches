<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NurbsCurvePointList.SetPoint Method (Int32, Double, Double, Double, Double)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Collections.NurbsCurvePointList.SetPoint(System.Int32,System.Double,System.Double,System.Double,System.Double)" /><meta name="Description" content="Sets a specific control-point." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry.Collections" /><meta name="file" content="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint_2" /><meta name="guid" content="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint_2" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino_Geometry_Collections.htm" title="Rhino.Geometry.Collections" tocid="N_Rhino_Geometry_Collections">Rhino.Geometry.Collections</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Rhino_Geometry_Collections_NurbsCurvePointList.htm" title="NurbsCurvePointList Class" tocid="T_Rhino_Geometry_Collections_NurbsCurvePointList">NurbsCurvePointList Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Rhino_Geometry_Collections_NurbsCurvePointList.htm" title="NurbsCurvePointList Methods" tocid="Methods_T_Rhino_Geometry_Collections_NurbsCurvePointList">NurbsCurvePointList Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint.htm" title="SetPoint Method " tocid="Overload_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint">SetPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint.htm" title="SetPoint Method (Int32, Point3d)" tocid="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint">SetPoint Method (Int32, Point3d)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint_1.htm" title="SetPoint Method (Int32, Point4d)" tocid="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint_1">SetPoint Method (Int32, Point4d)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint_2.htm" title="SetPoint Method (Int32, Double, Double, Double, Double)" tocid="M_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint_2">SetPoint Method (Int32, Double, Double, Double, Double)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">NurbsCurvePointList<span id="LSTB57499A1_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB57499A1_0?cpp=::|nu=.");</script>SetPoint Method (Int32, Double, Double, Double, Double)</td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            Sets a specific control-point.
            </div><p> </p><strong>Namespace:</strong> <a href="N_Rhino_Geometry_Collections.htm">Rhino.Geometry.Collections</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">SetPoint</span>(
	<span class="identifier">int</span> <span class="parameter">index</span>,
	<span class="identifier">double</span> <span class="parameter">x</span>,
	<span class="identifier">double</span> <span class="parameter">y</span>,
	<span class="identifier">double</span> <span class="parameter">z</span>,
	<span class="identifier">double</span> <span class="parameter">weight</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">SetPoint</span> ( 
	<span class="parameter">index</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">x</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">y</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">z</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">weight</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">index</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LSTB57499A1_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB57499A1_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />Index of control-point to set.</dd><dt><span class="parameter">x</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LSTB57499A1_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB57499A1_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />X coordinate of control-point.</dd><dt><span class="parameter">y</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LSTB57499A1_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB57499A1_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />Y coordinate of control-point.</dd><dt><span class="parameter">z</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LSTB57499A1_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB57499A1_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />Z coordinate of control-point.</dd><dt><span class="parameter">weight</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/643eft0t" target="_blank">System<span id="LSTB57499A1_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB57499A1_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />Weight of control-point.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:Rhino.Geometry.Collections.NurbsCurvePointList.SetPoint(System.Int32,System.Double,System.Double,System.Double,System.Double)"]</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddNurbsCircle(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// The easy way to get a NURBS curve from a circle is with</span>
    <span class="highlight-comment">// the following two lines of code.</span>
    <span class="highlight-comment">// </span>
    <span class="highlight-comment">// Rhino.Geometry.Circle c = new Rhino.Geometry.Circle(20);</span>
    <span class="highlight-comment">// Rhino.Geometry.NurbsCurve nc = c.ToNurbsCurve();</span>
    <span class="highlight-comment">// </span>
    <span class="highlight-comment">// This sample demonstrates creating a NURBS curve from scratch.</span>
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> dimension = <span class="highlight-number">3</span>;
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">bool</span> isRational = <span class="highlight-keyword">true</span>;
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> order = <span class="highlight-number">3</span>;
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> cv_count = <span class="highlight-number">9</span>;
    Rhino.Geometry.NurbsCurve nc = <span class="highlight-keyword">new</span> Rhino.Geometry.NurbsCurve(dimension, isRational, order, cv_count);
    nc.Points.SetPoint(<span class="highlight-number">0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">1</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">2</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">3</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">4</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">5</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">6</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">7</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">8</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Knots[<span class="highlight-number">0</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">1</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">2</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">3</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">4</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">5</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">6</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">7</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">8</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    nc.Knots[<span class="highlight-number">9</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    <span class="highlight-keyword">if</span> (nc.IsValid)
    {
      doc.Objects.AddCurve(nc);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddNurbsCircle(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' The easy way to get a NURBS curve from a circle is with</span>
    <span class="highlight-comment">' the following two lines of code.</span>
    <span class="highlight-comment">'</span>
    <span class="highlight-comment">' Dim c As New Rhino.Geometry.Circle(20)</span>
    <span class="highlight-comment">' Dim nc As Rhino.Geometry.NurbsCurve = c.ToNurbsCurve()</span>
    <span class="highlight-comment">'</span>
    <span class="highlight-comment">' This sample demonstrates creating a NURBS curve from scratch.</span>
    <span class="highlight-keyword">Const</span> dimension <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">3</span>
    <span class="highlight-keyword">Const</span> isRational <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">True</span>
    <span class="highlight-keyword">Const</span> order <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">3</span>
    <span class="highlight-keyword">Const</span> cv_count <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">9</span>
    <span class="highlight-keyword">Dim</span> nc <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Geometry.NurbsCurve(dimension, isRational, order, cv_count)
    nc.Points.SetPoint(<span class="highlight-number">0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">1</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">2</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">3</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">4</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">5</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">6</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">7</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">8</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Knots(<span class="highlight-number">0</span>) = <span class="highlight-number">0.0</span>
    nc.Knots(<span class="highlight-number">1</span>) = <span class="highlight-number">0.0</span>
    nc.Knots(<span class="highlight-number">2</span>) = <span class="highlight-number">0.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">3</span>) = <span class="highlight-number">0.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">4</span>) = Math.PI
    nc.Knots(<span class="highlight-number">5</span>) = Math.PI
    nc.Knots(<span class="highlight-number">6</span>) = <span class="highlight-number">1.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">7</span>) = <span class="highlight-number">1.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">8</span>) = <span class="highlight-number">2.0</span> * Math.PI
    nc.Knots(<span class="highlight-number">9</span>) = <span class="highlight-number">2.0</span> * Math.PI
    <span class="highlight-keyword">If</span> nc.IsValid <span class="highlight-keyword">Then</span>
      doc.Objects.AddCurve(nc)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">using System;

partial <span class="highlight-keyword">class</span> Examples
{
  public static Rhino.Commands.Result AddNurbsCircle(Rhino.RhinoDoc doc)
  {
    // The easy way to get a NURBS curve <span class="highlight-keyword">from</span> a circle <span class="highlight-keyword">is</span> <span class="highlight-keyword">with</span>
    // the following two lines of code.
    //
    // Rhino.Geometry.Circle c = new Rhino.Geometry.Circle(<span class="highlight-number">20</span>);
    // Rhino.Geometry.NurbsCurve nc = c.ToNurbsCurve();
    //
    // This sample demonstrates creating a NURBS curve <span class="highlight-keyword">from</span> scratch.
    int dimension = <span class="highlight-number">3</span>;
    bool isRational = true;
    int order = <span class="highlight-number">3</span>;
    int cv_count = <span class="highlight-number">9</span>;
    Rhino.Geometry.NurbsCurve nc = new Rhino.Geometry.NurbsCurve(dimension, isRational, order, cv_count);
    nc.Points.SetPoint(<span class="highlight-number">0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">1</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">2</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">3</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">4</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">5</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">6</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">7</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">8</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Knots[<span class="highlight-number">0</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">1</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">2</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">3</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">4</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">5</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">6</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">7</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">8</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    nc.Knots[<span class="highlight-number">9</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    <span class="highlight-keyword">if</span> (nc.IsValid)
    {
      doc.Objects.AddCurve(nc);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Collections_NurbsCurvePointList.htm">NurbsCurvePointList Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_Collections_NurbsCurvePointList_SetPoint.htm">SetPoint Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry_Collections.htm">Rhino.Geometry.Collections Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>