<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NurbsSurface.IncreaseDegreeV Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IncreaseDegreeV method" /><meta name="System.Keywords" content="NurbsSurface.IncreaseDegreeV method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.NurbsSurface.IncreaseDegreeV" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.NurbsSurface.IncreaseDegreeV(System.Int32)" /><meta name="Description" content="Increase the degree of this surface in V direction." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_NurbsSurface_IncreaseDegreeV" /><meta name="guid" content="M_Rhino_Geometry_NurbsSurface_IncreaseDegreeV" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon SDK<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino.htm" title="RhinoCommon SDK" tocid="roottoc">RhinoCommon SDK</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Rhino_Geometry_NurbsSurface.htm" title="NurbsSurface Class" tocid="T_Rhino_Geometry_NurbsSurface">NurbsSurface Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Rhino_Geometry_NurbsSurface.htm" title="NurbsSurface Methods" tocid="Methods_T_Rhino_Geometry_NurbsSurface">NurbsSurface Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CopyFrom.htm" title="CopyFrom Method " tocid="M_Rhino_Geometry_NurbsSurface_CopyFrom">CopyFrom Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_Create.htm" title="Create Method " tocid="M_Rhino_Geometry_NurbsSurface_Create">Create Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateFromCone.htm" title="CreateFromCone Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateFromCone">CreateFromCone Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_NurbsSurface_CreateFromCorners.htm" title="CreateFromCorners Method " tocid="Overload_Rhino_Geometry_NurbsSurface_CreateFromCorners">CreateFromCorners Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateFromCylinder.htm" title="CreateFromCylinder Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateFromCylinder">CreateFromCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateFromPoints.htm" title="CreateFromPoints Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateFromPoints">CreateFromPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateFromSphere.htm" title="CreateFromSphere Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateFromSphere">CreateFromSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateFromTorus.htm" title="CreateFromTorus Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateFromTorus">CreateFromTorus Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Rhino_Geometry_NurbsSurface_CreateNetworkSurface.htm" title="CreateNetworkSurface Method " tocid="Overload_Rhino_Geometry_NurbsSurface_CreateNetworkSurface">CreateNetworkSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateRailRevolvedSurface.htm" title="CreateRailRevolvedSurface Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateRailRevolvedSurface">CreateRailRevolvedSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateRuledSurface.htm" title="CreateRuledSurface Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateRuledSurface">CreateRuledSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_CreateThroughPoints.htm" title="CreateThroughPoints Method " tocid="M_Rhino_Geometry_NurbsSurface_CreateThroughPoints">CreateThroughPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_EpsilonEquals.htm" title="EpsilonEquals Method " tocid="M_Rhino_Geometry_NurbsSurface_EpsilonEquals">EpsilonEquals Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_IncreaseDegreeU.htm" title="IncreaseDegreeU Method " tocid="M_Rhino_Geometry_NurbsSurface_IncreaseDegreeU">IncreaseDegreeU Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_IncreaseDegreeV.htm" title="IncreaseDegreeV Method " tocid="M_Rhino_Geometry_NurbsSurface_IncreaseDegreeV">IncreaseDegreeV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_MakeNonRational.htm" title="MakeNonRational Method " tocid="M_Rhino_Geometry_NurbsSurface_MakeNonRational">MakeNonRational Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Rhino_Geometry_NurbsSurface_MakeRational.htm" title="MakeRational Method " tocid="M_Rhino_Geometry_NurbsSurface_MakeRational">MakeRational Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">NurbsSurface<span id="LSTFE68AC32_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFE68AC32_0?cpp=::|nu=.");</script>IncreaseDegreeV Method </td></tr></table><span class="introStyle">Rhino for Mac 5.1</span><div class="summary">
            Increase the degree of this surface in V direction.
            </div><p> </p><strong>Namespace:</strong> <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br /><strong>Assembly:</strong> RhinoCommon (in RhinoCommon.dll) Version: 5.1.50000.0 (5.0.20693.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">IncreaseDegreeV</span>(
	<span class="identifier">int</span> <span class="parameter">desiredDegree</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">IncreaseDegreeV</span> ( 
	<span class="parameter">desiredDegree</span> <span class="keyword">As</span> <span class="identifier">Integer</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">desiredDegree</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LSTFE68AC32_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFE68AC32_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The desired degree.
            Degrees should be number between and including 1 and 11.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/a28wyd50" target="_blank">Boolean</a><br />true on success, false on failure.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBABA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','cs','1','2');return false;">C#</a></div><div id="ID0EBBABA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBABA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EBBABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.DocObjects;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> NurbsSurfaceIncreaseDegreeCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csNurbsSrfIncreaseDegree"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      ObjRef obj_ref;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetOneObject(
        <span class="highlight-literal">"Select surface"</span>, <span class="highlight-keyword">false</span>, ObjectType.Surface, <span class="highlight-keyword">out</span> obj_ref);
      <span class="highlight-keyword">if</span> (rc != Result.Success) <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">if</span> (obj_ref == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">return</span> Result.Failure;
      <span class="highlight-keyword">var</span> surface = obj_ref.Surface();
      <span class="highlight-keyword">if</span> (surface == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">return</span> Result.Failure;
      <span class="highlight-keyword">var</span> nurbs_surface = surface.ToNurbsSurface();

      <span class="highlight-keyword">int</span> new_u_degree = <span class="highlight-number">-1</span>;
      rc = RhinoGet.GetInteger(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"New U degree &lt;{0}...11&gt;"</span>, nurbs_surface.Degree(<span class="highlight-number">0</span>)), <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> new_u_degree,
        nurbs_surface.Degree(<span class="highlight-number">0</span>), <span class="highlight-number">11</span>);
      <span class="highlight-keyword">if</span> (rc != Result.Success) <span class="highlight-keyword">return</span> rc;

      <span class="highlight-keyword">int</span> new_v_degree = <span class="highlight-number">-1</span>;
      rc = RhinoGet.GetInteger(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"New V degree &lt;{0}...11&gt;"</span>, nurbs_surface.Degree(<span class="highlight-number">1</span>)), <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> new_v_degree,
        nurbs_surface.Degree(<span class="highlight-number">1</span>), <span class="highlight-number">11</span>);
      <span class="highlight-keyword">if</span> (rc != Result.Success) <span class="highlight-keyword">return</span> rc;

      rc = Result.Failure;
      <span class="highlight-keyword">if</span> (nurbs_surface.IncreaseDegreeU(new_u_degree))
        <span class="highlight-keyword">if</span> (nurbs_surface.IncreaseDegreeV(new_v_degree))
          <span class="highlight-keyword">if</span> (doc.Objects.Replace(obj_ref.ObjectId, nurbs_surface))
            rc = Result.Success;

      RhinoApp.WriteLine(<span class="highlight-literal">"Result: {0}"</span>, rc.ToString());
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> rc;
    }
  }
}</pre></div><div id="ID0EBBABA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Input
<span class="highlight-keyword">Imports</span> Rhino.DocObjects

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> NurbsSurfaceIncreaseDegreeCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbNurbsSrfIncreaseDegree"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> obj_ref <span class="highlight-keyword">As</span> ObjRef
      <span class="highlight-keyword">Dim</span> rc = RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface"</span>, <span class="highlight-keyword">False</span>, ObjectType.Surface, obj_ref)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> obj_ref <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> surface = obj_ref.Surface()
      <span class="highlight-keyword">If</span> surface <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> nurbs_surface = surface.ToNurbsSurface()

      <span class="highlight-keyword">Dim</span> new_u_degree <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">-1</span>
      rc = RhinoGet.GetInteger(<span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"New U degree &lt;{0}...11&gt;"</span>, nurbs_surface.Degree(<span class="highlight-number">0</span>)), <span class="highlight-keyword">True</span>, new_u_degree, nurbs_surface.Degree(<span class="highlight-number">0</span>), <span class="highlight-number">11</span>)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> new_v_degree <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">-1</span>
      rc = RhinoGet.GetInteger(<span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"New V degree &lt;{0}...11&gt;"</span>, nurbs_surface.Degree(<span class="highlight-number">1</span>)), <span class="highlight-keyword">True</span>, new_v_degree, nurbs_surface.Degree(<span class="highlight-number">1</span>), <span class="highlight-number">11</span>)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      rc = Result.Failure
      <span class="highlight-keyword">If</span> nurbs_surface.IncreaseDegreeU(new_u_degree) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">If</span> nurbs_surface.IncreaseDegreeV(new_v_degree) <span class="highlight-keyword">Then</span>
          <span class="highlight-keyword">If</span> doc.Objects.Replace(obj_ref.ObjectId, nurbs_surface) <span class="highlight-keyword">Then</span>
            rc = Result.Success
          <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      RhinoApp.WriteLine(<span class="highlight-literal">"Result: {0}"</span>, rc.ToString())
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">from</span> Rhino <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.DocObjects <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> RunCommand():
  rc, obj_ref = RhinoGet.GetOneObject(<span class="highlight-literal">"Select surface"</span>, False, ObjectType.Surface)
  <span class="highlight-keyword">if</span> rc != Result.Success: <span class="highlight-keyword">return</span> rc
  <span class="highlight-keyword">if</span> obj_ref == None: <span class="highlight-keyword">return</span> Result.Failure
  surface = obj_ref.Surface()
  <span class="highlight-keyword">if</span> surface == None: <span class="highlight-keyword">return</span> Result.Failure
  nurbs_surface = surface.ToNurbsSurface()

  new_u_degree = <span class="highlight-number">-1</span>
  rc, new_u_degree = RhinoGet.GetInteger(
    <span class="highlight-literal">"New U degree &lt;{0}...11&gt;"</span>.format(nurbs_surface.Degree(<span class="highlight-number">0</span>)), True, new_u_degree, nurbs_surface.Degree(<span class="highlight-number">0</span>), <span class="highlight-number">11</span>)
  <span class="highlight-keyword">if</span> rc != Result.Success: <span class="highlight-keyword">return</span> rc

  new_v_degree = <span class="highlight-number">-1</span>
  rc, new_v_degree = RhinoGet.GetInteger(
    <span class="highlight-literal">"New V degree &lt;{0}...11&gt;"</span>.format(nurbs_surface.Degree(<span class="highlight-number">1</span>)), True, new_v_degree, nurbs_surface.Degree(<span class="highlight-number">1</span>), <span class="highlight-number">11</span>)
  <span class="highlight-keyword">if</span> rc != Result.Success: <span class="highlight-keyword">return</span> rc

  rc = Result.Failure
  <span class="highlight-keyword">if</span> nurbs_surface.IncreaseDegreeU(new_u_degree):
    <span class="highlight-keyword">if</span> nurbs_surface.IncreaseDegreeV(new_v_degree):
      <span class="highlight-keyword">if</span> doc.Objects.Replace(obj_ref.ObjectId, nurbs_surface):
        rc = Result.Success

  <span class="highlight-keyword">print</span> <span class="highlight-literal">"Result: {0}"</span>.format(rc)
  doc.Views.Redraw()
  <span class="highlight-keyword">return</span> rc

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_NurbsSurface.htm">NurbsSurface Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Updated 4 October 2015 - Robert McNeel and Associates<p><a href="http://discourse.mcneel.com/" target="_blank">Report wishes and bugs: http://discourse.mcneel.com/</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:steve%40mcneel.com?Subject=RhinoCommon SDK">steve@mcneel.com</a></div><script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>